"""create application tables

Revision ID: 06632a42beec
Revises: 
Create Date: 2025-02-17 20:57:18.003539

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '06632a42beec'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('applications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('notice_period', sa.String(), nullable=True),
    sa.Column('salary_range_usd', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_applications_id'), 'applications', ['id'], unique=False)
    op.create_table('jobs',
    sa.Column('job_id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('company', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('location', sa.String(), nullable=False),
    sa.Column('employment_type', sa.Enum('FULL_TIME', 'PART_TIME', 'CONTRACT', 'TEMPORARY', 'INTERNSHIP', name='employmenttype'), nullable=False),
    sa.Column('salary_range', sa.String(), nullable=False),
    sa.Column('benefits', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deadline', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('job_id')
    )
    op.create_table('personal_information',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('surname', sa.String(), nullable=True),
    sa.Column('date_of_birth', sa.String(), nullable=True),
    sa.Column('country', sa.String(), nullable=True),
    sa.Column('city', sa.String(), nullable=True),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('zip_code', sa.String(), nullable=True),
    sa.Column('phone_prefix', sa.String(), nullable=True),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('github', sa.String(), nullable=True),
    sa.Column('linkedin', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_personal_information_id'), 'personal_information', ['id'], unique=False)
    op.create_table('legal_authorization',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('eu_work_authorization', sa.String(), nullable=True),
    sa.Column('us_work_authorization', sa.String(), nullable=True),
    sa.Column('requires_us_visa', sa.String(), nullable=True),
    sa.Column('legally_allowed_to_work_in_us', sa.String(), nullable=True),
    sa.Column('requires_us_sponsorship', sa.String(), nullable=True),
    sa.Column('requires_eu_visa', sa.String(), nullable=True),
    sa.Column('legally_allowed_to_work_in_eu', sa.String(), nullable=True),
    sa.Column('requires_eu_sponsorship', sa.String(), nullable=True),
    sa.Column('canada_work_authorization', sa.String(), nullable=True),
    sa.Column('requires_canada_visa', sa.String(), nullable=True),
    sa.Column('legally_allowed_to_work_in_canada', sa.String(), nullable=True),
    sa.Column('requires_canada_sponsorship', sa.String(), nullable=True),
    sa.Column('uk_work_authorization', sa.String(), nullable=True),
    sa.Column('requires_uk_visa', sa.String(), nullable=True),
    sa.Column('legally_allowed_to_work_in_uk', sa.String(), nullable=True),
    sa.Column('requires_uk_sponsorship', sa.String(), nullable=True),
    sa.Column('application_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['application_id'], ['applications.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_legal_authorization_id'), 'legal_authorization', ['id'], unique=False)
    op.create_table('resume',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('personal_information_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['personal_information_id'], ['personal_information.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_resume_id'), 'resume', ['id'], unique=False)
    op.create_table('self_identification',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('gender', sa.String(), nullable=True),
    sa.Column('pronouns', sa.String(), nullable=True),
    sa.Column('veteran', sa.String(), nullable=True),
    sa.Column('disability', sa.String(), nullable=True),
    sa.Column('ethnicity', sa.String(), nullable=True),
    sa.Column('application_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['application_id'], ['applications.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_self_identification_id'), 'self_identification', ['id'], unique=False)
    op.create_table('work_preferences',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('remote_work', sa.String(), nullable=True),
    sa.Column('in_person_work', sa.String(), nullable=True),
    sa.Column('open_to_relocation', sa.String(), nullable=True),
    sa.Column('willing_to_complete_assessments', sa.String(), nullable=True),
    sa.Column('willing_to_undergo_drug_tests', sa.String(), nullable=True),
    sa.Column('willing_to_undergo_background_checks', sa.String(), nullable=True),
    sa.Column('application_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['application_id'], ['applications.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_work_preferences_id'), 'work_preferences', ['id'], unique=False)
    op.create_table('certification',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('resume_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['resume_id'], ['resume.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_certification_id'), 'certification', ['id'], unique=False)
    op.create_table('education',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('education_level', sa.String(), nullable=True),
    sa.Column('institution', sa.String(), nullable=True),
    sa.Column('field_of_study', sa.String(), nullable=True),
    sa.Column('final_evaluation_grade', sa.String(), nullable=True),
    sa.Column('start_date', sa.String(), nullable=True),
    sa.Column('year_of_completion', sa.Integer(), nullable=True),
    sa.Column('resume_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['resume_id'], ['resume.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_education_id'), 'education', ['id'], unique=False)
    op.create_table('experience',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('position', sa.String(), nullable=True),
    sa.Column('company', sa.String(), nullable=True),
    sa.Column('employment_period', sa.String(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('industry', sa.String(), nullable=True),
    sa.Column('resume_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['resume_id'], ['resume.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_experience_id'), 'experience', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_experience_id'), table_name='experience')
    op.drop_table('experience')
    op.drop_index(op.f('ix_education_id'), table_name='education')
    op.drop_table('education')
    op.drop_index(op.f('ix_certification_id'), table_name='certification')
    op.drop_table('certification')
    op.drop_index(op.f('ix_work_preferences_id'), table_name='work_preferences')
    op.drop_table('work_preferences')
    op.drop_index(op.f('ix_self_identification_id'), table_name='self_identification')
    op.drop_table('self_identification')
    op.drop_index(op.f('ix_resume_id'), table_name='resume')
    op.drop_table('resume')
    op.drop_index(op.f('ix_legal_authorization_id'), table_name='legal_authorization')
    op.drop_table('legal_authorization')
    op.drop_index(op.f('ix_personal_information_id'), table_name='personal_information')
    op.drop_table('personal_information')
    op.drop_table('jobs')
    op.drop_index(op.f('ix_applications_id'), table_name='applications')
    op.drop_table('applications')
    # ### end Alembic commands ###
