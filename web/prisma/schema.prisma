generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Application {
  id                  Int                   @id @default(autoincrement())
  notice_period       String?               @db.VarChar
  salary_range_usd    String?               @db.VarChar
  created_at          DateTime?             @db.Timestamp(6)
  updated_at          DateTime?             @db.Timestamp(6)
  resume_path         String                @db.VarChar
  cover_letter_path   String?               @db.VarChar
  legal_authorization legal_authorization[]
  self_identification self_identification[]
  work_preferences    work_preferences[]

  @@index([id], map: "ix_applications_id")
  @@map("applications")
}

model alembic_version {
  version_num String @id(map: "alembic_version_pkc") @db.VarChar(32)
}

model certification {
  id          Int     @id @default(autoincrement())
  name        String? @db.VarChar
  description String? @db.VarChar
  resume_id   Int?
  resume      resume? @relation(fields: [resume_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([id], map: "ix_certification_id")
}

model education {
  id                     Int     @id @default(autoincrement())
  education_level        String? @db.VarChar
  institution            String? @db.VarChar
  field_of_study         String? @db.VarChar
  final_evaluation_grade String? @db.VarChar
  start_date             String? @db.VarChar
  year_of_completion     Int?
  resume_id              Int?
  resume                 resume? @relation(fields: [resume_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([id], map: "ix_education_id")
}

model experience {
  id                Int     @id @default(autoincrement())
  position          String? @db.VarChar
  company           String? @db.VarChar
  employment_period String? @db.VarChar
  location          String? @db.VarChar
  industry          String? @db.VarChar
  resume_id         Int?
  resume            resume? @relation(fields: [resume_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([id], map: "ix_experience_id")
}

model legal_authorization {
  id                                Int          @id @default(autoincrement())
  eu_work_authorization             String?      @db.VarChar
  us_work_authorization             String?      @db.VarChar
  requires_us_visa                  String?      @db.VarChar
  legally_allowed_to_work_in_us     String?      @db.VarChar
  requires_us_sponsorship           String?      @db.VarChar
  requires_eu_visa                  String?      @db.VarChar
  legally_allowed_to_work_in_eu     String?      @db.VarChar
  requires_eu_sponsorship           String?      @db.VarChar
  canada_work_authorization         String?      @db.VarChar
  requires_canada_visa              String?      @db.VarChar
  legally_allowed_to_work_in_canada String?      @db.VarChar
  requires_canada_sponsorship       String?      @db.VarChar
  uk_work_authorization             String?      @db.VarChar
  requires_uk_visa                  String?      @db.VarChar
  legally_allowed_to_work_in_uk     String?      @db.VarChar
  requires_uk_sponsorship           String?      @db.VarChar
  application_id                    Int?
  applications                      Application? @relation(fields: [application_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([id], map: "ix_legal_authorization_id")
}

model personal_information {
  id            Int      @id @default(autoincrement())
  name          String?  @db.VarChar
  surname       String?  @db.VarChar
  date_of_birth String?  @db.VarChar
  country       String?  @db.VarChar
  city          String?  @db.VarChar
  address       String?  @db.VarChar
  zip_code      String?  @db.VarChar
  phone_prefix  String?  @db.VarChar
  phone         String?  @db.VarChar
  email         String?  @db.VarChar
  github        String?  @db.VarChar
  linkedin      String?  @db.VarChar
  resume        resume[]

  @@index([id], map: "ix_personal_information_id")
}

model resume {
  id                      Int                   @id @default(autoincrement())
  personal_information_id Int?
  certification           certification[]
  education               education[]
  experience              experience[]
  personal_information    personal_information? @relation(fields: [personal_information_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([id], map: "ix_resume_id")
}

model self_identification {
  id             Int          @id @default(autoincrement())
  gender         String?      @db.VarChar
  pronouns       String?      @db.VarChar
  veteran        String?      @db.VarChar
  disability     String?      @db.VarChar
  ethnicity      String?      @db.VarChar
  application_id Int?
  applications   Application? @relation(fields: [application_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([id], map: "ix_self_identification_id")
}

model work_preferences {
  id                                   Int          @id @default(autoincrement())
  remote_work                          String?      @db.VarChar
  in_person_work                       String?      @db.VarChar
  open_to_relocation                   String?      @db.VarChar
  willing_to_complete_assessments      String?      @db.VarChar
  willing_to_undergo_drug_tests        String?      @db.VarChar
  willing_to_undergo_background_checks String?      @db.VarChar
  application_id                       Int?
  applications                         Application? @relation(fields: [application_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([id], map: "ix_work_preferences_id")
}

model job_descriptions {
  id                    String    @id @db.Uuid
  title                 String    @db.VarChar
  company               String    @db.VarChar
  summary               String    @db.VarChar
  responsibility_duties String    @db.VarChar
  qualification_skills  Json      @db.Json
  work_environment      String    @db.VarChar
  salary_benefits       String    @db.VarChar
  created_at            DateTime? @db.Timestamp(6)
  updated_at            DateTime? @db.Timestamp(6)
}

enum employmenttype {
  FULL_TIME
  PART_TIME
  CONTRACT
  TEMPORARY
  INTERNSHIP
}
